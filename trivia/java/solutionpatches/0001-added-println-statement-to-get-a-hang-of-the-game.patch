From 0b0f41cff8aa48e666b0b217259c4fc5428f9ada Mon Sep 17 00:00:00 2001
From: Tony Vo <tony.vo@calgaryscientific.com>
Date: Tue, 19 Jan 2016 03:36:03 -0700
Subject: [PATCH 1/3] added println statement to get a hang of the game

---
 .../games/trivia/runner/GameRunner.java            | 12 ++--
 .../com/adaptionsoft/games/uglytrivia/Game.java    | 70 ++++++++++++----------
 2 files changed, 43 insertions(+), 39 deletions(-)

diff --git a/refactoring/trivia/java/src/main/java/com/adaptionsoft/games/trivia/runner/GameRunner.java b/refactoring/trivia/java/src/main/java/com/adaptionsoft/games/trivia/runner/GameRunner.java
index ed99a9a..fb98b89 100644
--- a/refactoring/trivia/java/src/main/java/com/adaptionsoft/games/trivia/runner/GameRunner.java
+++ b/refactoring/trivia/java/src/main/java/com/adaptionsoft/games/trivia/runner/GameRunner.java
@@ -10,6 +10,7 @@ public class GameRunner {
 	private static boolean notAWinner;
 
 	public static void main(String[] args) {
+		System.out.println("******************* Game Started *********************");
 		Game aGame = new Game();
 		
 		aGame.add("Chet");
@@ -17,9 +18,9 @@ public class GameRunner {
 		aGame.add("Sue");
 		
 		Random rand = new Random();
-	
+		int roundCount = 1;
 		do {
-			
+			System.out.println("*************** Round " + roundCount + " Started ***************");
 			aGame.roll(rand.nextInt(5) + 1);
 			
 			if (rand.nextInt(9) == 7) {
@@ -27,10 +28,9 @@ public class GameRunner {
 			} else {
 				notAWinner = aGame.wasCorrectlyAnswered();
 			}
-			
-			
-			
+			System.out.println("--------------- Round " + roundCount + " Ended -----------------");
+			roundCount++;
 		} while (notAWinner);
-		
+		System.out.println("------------------------- Game Ended ------------------------");
 	}
 }
diff --git a/refactoring/trivia/java/src/main/java/com/adaptionsoft/games/uglytrivia/Game.java b/refactoring/trivia/java/src/main/java/com/adaptionsoft/games/uglytrivia/Game.java
index d76bbbc..1ce0c75 100644
--- a/refactoring/trivia/java/src/main/java/com/adaptionsoft/games/uglytrivia/Game.java
+++ b/refactoring/trivia/java/src/main/java/com/adaptionsoft/games/uglytrivia/Game.java
@@ -35,13 +35,12 @@ public class Game {
 	}
 
 	public boolean add(String playerName) {
-		
-		
 	    players.add(playerName);
 	    places[howManyPlayers()] = 0;
 	    purses[howManyPlayers()] = 0;
 	    inPenaltyBox[howManyPlayers()] = false;
-	    
+		System.out.println(playerName + " was added");
+		System.out.println("He/She is player number " + players.size());
 		return true;
 	}
 	
@@ -50,41 +49,46 @@ public class Game {
 	}
 
 	public void roll(int roll) {
-
+        System.out.println(players.get(currentPlayer) + " is the current player");
+        System.out.println("He/She has rolled a " + roll);
 		if (inPenaltyBox[currentPlayer]) {
 			if (roll % 2 != 0) {
 				isGettingOutOfPenaltyBox = true;
-				
+
+                System.out.println(players.get(currentPlayer) + " is getting out of penalty box");
 				places[currentPlayer] = places[currentPlayer] + roll;
 				if (places[currentPlayer] > 11) places[currentPlayer] = places[currentPlayer] - 12;
-				
+
+                System.out.println(players.get(currentPlayer) + "'s new location is " + places[currentPlayer]);
+                System.out.println("The category is " + currentCategory());
 				askQuestion();
 			} else {
+                System.out.println(players.get(currentPlayer) + " is not getting out of the penalty box");
 				isGettingOutOfPenaltyBox = false;
-				}
-			
+            }
 		} else {
-		
+
 			places[currentPlayer] = places[currentPlayer] + roll;
 			if (places[currentPlayer] > 11) places[currentPlayer] = places[currentPlayer] - 12;
-			
+
+            System.out.println(players.get(currentPlayer) + "'s new location is " + places[currentPlayer]);
+            System.out.println("The category is " + currentCategory());
+
 			askQuestion();
 		}
-		
 	}
 
 	private void askQuestion() {
 		if (currentCategory() == "Pop")
-			popQuestions.removeFirst();
+			System.out.println(popQuestions.removeFirst());
 		if (currentCategory() == "Science")
-			scienceQuestions.removeFirst();
+			System.out.println(scienceQuestions.removeFirst());
 		if (currentCategory() == "Sports")
-			sportsQuestions.removeFirst();
+			System.out.println(sportsQuestions.removeFirst());
 		if (currentCategory() == "Rock")
-			rockQuestions.removeFirst();
+			System.out.println(rockQuestions.removeFirst());
 	}
-	
-	
+
 	private String currentCategory() {
 		if (places[currentPlayer] == 0) return "Pop";
 		if (places[currentPlayer] == 4) return "Pop";
@@ -101,26 +105,26 @@ public class Game {
 	public boolean wasCorrectlyAnswered() {
 		if (inPenaltyBox[currentPlayer]){
 			if (isGettingOutOfPenaltyBox) {
-				purses[currentPlayer]++;
-
+				System.out.println("Answer was correct!!!!");
+                purses[currentPlayer]++;
+                System.out.println(players.get(currentPlayer) + " now has " + purses[currentPlayer] + " Gold Coins.");
 				boolean winner = didPlayerWin();
-				currentPlayer++;
-				if (currentPlayer == players.size()) currentPlayer = 0;
-				
+                System.out.println(players.get(currentPlayer) + " has " + (winner? "won": "lost"));
+                currentPlayer++;
+                if (currentPlayer == players.size()) currentPlayer = 0;
 				return winner;
 			} else {
-				currentPlayer++;
-				if (currentPlayer == players.size()) currentPlayer = 0;
-				return true;
+                System.out.println(players.get(currentPlayer) + " has won and current player is reset to 0.");
+                currentPlayer++;
+                if (currentPlayer == players.size()) currentPlayer = 0;
+                return true;
 			}
-			
-			
-			
 		} else {
-		
+            System.out.println("Answer was correct!!!!");
 			purses[currentPlayer]++;
-
+            System.out.println(players.get(currentPlayer) + " now has " + purses[currentPlayer] + " Gold Coins.");
 			boolean winner = didPlayerWin();
+            System.out.println(players.get(currentPlayer) + " has " + (winner? "won": "lost"));
 			currentPlayer++;
 			if (currentPlayer == players.size()) currentPlayer = 0;
 			
@@ -130,13 +134,13 @@ public class Game {
 	
 	public boolean wrongAnswer(){
 		inPenaltyBox[currentPlayer] = true;
-		
-		currentPlayer++;
+		System.out.println("Question was incorrectly answered");
+		System.out.println(players.get(currentPlayer) + " was sent to the penalty box");
+        currentPlayer++;
 		if (currentPlayer == players.size()) currentPlayer = 0;
 		return true;
 	}
 
-
 	private boolean didPlayerWin() {
 		return !(purses[currentPlayer] == 6);
 	}
-- 
2.5.3.windows.1

